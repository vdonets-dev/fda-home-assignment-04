plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.6'
    id 'org.openapi.generator' version '6.6.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'io.freefair.lombok' version '8.0.0-rc3'
}

group = 'com.fda'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

ext {
    openApiSpecFile = "${projectDir}/src/main/resources/openapi/openapi.yaml"
    openApiPackage = "com.example.openfda.generated"
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }

    cucumberRuntime {
        extendsFrom testImplementation
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    // Spring dependencies
    implementation 'org.springframework.boot:spring-boot-starter-web:3.0.6'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc:3.0.6'
    implementation 'org.springframework.boot:spring-boot-starter-validation:3.0.6'
    implementation 'org.springframework.boot:spring-boot-starter-aop:3.0.6'
    implementation 'jakarta.servlet:jakarta.servlet-api'
    implementation 'jakarta.annotation:jakarta.annotation-api'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.1'
    implementation 'org.springframework.retry:spring-retry:2.0.11'
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.2.1'
    implementation 'com.github.ben-manes.caffeine:caffeine:3.1.8'
    implementation 'org.springframework.cloud:spring-cloud-contract-wiremock:4.2.0'

    // Spring Data
    implementation 'org.springframework.data:spring-data-commons:3.0.5'

    // Database & ORM
    implementation 'org.flywaydb:flyway-core:9.16.0'
    implementation 'org.postgresql:postgresql:42.6.0'

    // Resilience
    implementation 'io.github.resilience4j:resilience4j-all:2.1.0'
    implementation 'io.github.resilience4j:resilience4j-spring-boot3:2.1.0'

    // Caching
    implementation 'javax.cache:cache-api:1.1.1'
    implementation 'org.springframework.boot:spring-boot-starter-cache:3.0.6'

    // Metrics & Monitoring
    implementation 'org.springframework.boot:spring-boot-starter-actuator:3.0.6'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'

    // Tests
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.2'
    testImplementation 'org.mockito:mockito-core:5.3.1'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.3.1'
    testImplementation 'org.hamcrest:hamcrest:2.2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.0.6'
    testImplementation 'org.jmockit:jmockit:1.49'
    testImplementation 'org.awaitility:awaitility:4.2.0'
    testImplementation 'org.testcontainers:testcontainers:1.19.0'
    testImplementation 'org.testcontainers:junit-jupiter:1.19.0'
    testImplementation 'org.testcontainers:postgresql:1.19.0'
    testImplementation 'org.assertj:assertj-core:3.26.3'
    testImplementation 'io.rest-assured:rest-assured:5.3.0'
    testImplementation 'com.jayway.jsonpath:json-path:2.8.0'
    testImplementation 'io.cucumber:cucumber-java:7.14.0'
    testImplementation 'io.cucumber:cucumber-spring:7.14.0'
    testImplementation 'io.cucumber:cucumber-junit-platform-engine:7.14.0'

    // Utils
    implementation 'commons-io:commons-io:2.14.0'
    implementation 'net.javacrumbs.json-unit:json-unit:2.34.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.2'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.14.2'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.18.2'
    testImplementation 'org.hamcrest:hamcrest:2.2'
    testImplementation 'org.junit.platform:junit-platform-suite:1.9.1'
}

tasks.register('cucumberCli') {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            mainClass.set('io.cucumber.core.cli.Main')
            classpath = sourceSets.test.runtimeClasspath
            args = [
                    '--plugin', 'pretty',
                    '--plugin', 'html:target/cucumber-report.html',
                    '--glue', 'com.fda.home.bdd',
                    'src/test/resources/features'
            ]
        }
    }
}

openApiGenerate {
    def basePackage = "com.openfda.generated"
    generatorName = 'spring'
    library = 'spring-boot'
    inputSpec = file("${openApiSpecFile}").absolutePath.toString()
    configOptions = [
            dateLibrary                             : 'java17',
            basePackage                             : basePackage,
            modelPackage                            : "${basePackage}.models",
            apiPackage                              : "${basePackage}.controllers",
            sourceFolder                            : '',
            useSwaggerUI                            : 'false',
            delegatePattern                         : 'false',
            hideGenerationTimestamp                 : 'true',
            serializableModel                       : 'true',
            openApiNullable                         : 'false',
            interfaceOnly                           : 'true',
            disallowAdditionalPropertiesIfNotPresent: 'false',
            annotationLibrary                       : 'none',
            documentationProvider                   : 'none',
            performBeanValidation                   : 'true',
            useBeanValidation                       : 'true',
            useSpringController                     : 'true',
            useTags                                 : 'true',
            useSpringBoot3                          : 'true'
    ]
    globalProperties = [
            models         : '',
            apis           : '',
            supportingFiles: 'ApiUtil.java'
    ]
    additionalProperties = [
            'templatesDir': 'JavaSpring'
    ]
}

sourceSets {
    main {
        java {
            srcDirs += "${buildDir}/generate-resources/main"
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named('compileJava') {
    dependsOn tasks.openApiGenerate
}
